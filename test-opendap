from netCDF4 import Dataset
import numpy as np

# Open the dataset (change variable names as needed)
url = "https://coastwatch.pfeg.noaa.gov/erddap/griddap/erdMWcflh8day_LonPM180"
nc = Dataset(url, mode='r')

# Retrieve coordinate variables; adjust variable names if they differ
lats = nc.variables['latitude'][:]  # or 'latitude'
lons = nc.variables['longitude'][:]  # or 'longitude'

# Print ranges to check the coordinate values
print("Latitude range:", lats.min(), "to", lats.max())
print("Longitude range:", lons.min(), "to", lons.max())

# Find index ranges for desired subset:
# Here, we want latitudes between 42 and 49, and longitudes between -126 and -123.
lat_indices = np.where((lats >= 42) & (lats <= 49))[0]
lon_indices = np.where((lons >= -126) & (lons <= -123))[0]

if lat_indices.size == 0 or lon_indices.size == 0:
    print("No data found for the specified coordinate bounds.")
else:
    # Assuming your variable of interest is 'fluorescence'
    # and that its dimensions are ordered (time, [other dims], lat, lon)
    # Adjust slicing as necessary if there are additional dimensions.
    fluorescence = nc.variables['fluorescence']

    # For example, if the dimensions are [time, lat, lon]:
    subset = fluorescence[:, lat_indices[0]:lat_indices[-1]+1,
                                lon_indices[0]:lon_indices[-1]+1]

    print("Subset shape:", subset.shape)
    # Process your subset as needed.

nc.close()
