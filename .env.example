# =============================================================================
# DATect Environment Configuration Example
# =============================================================================
# Copy this file to .env and modify values as needed for your deployment
# 
# Environment-specific files:
# - .env.development (for development)
# - .env.staging (for staging)
# - .env.production (for production)
# - .env (for local overrides)

# =============================================================================
# DEPLOYMENT ENVIRONMENT
# =============================================================================
# Options: development, staging, production
DATECT_ENVIRONMENT=development

# =============================================================================
# CORE APPLICATION SETTINGS
# =============================================================================

# Forecasting mode: retrospective or realtime
DATECT_FORECAST_MODE=retrospective

# Prediction task: regression or classification
DATECT_FORECAST_TASK=regression

# Machine learning model: xgboost or ridge
DATECT_FORECAST_MODEL=xgboost

# =============================================================================
# DATA AND FILE PATHS
# =============================================================================

# Path to processed data file
DATECT_FINAL_OUTPUT_PATH=final_output.parquet

# Directory for saved model artifacts
DATECT_MODEL_ARTIFACTS_DIR=./model_artifacts/

# Directory for log files
DATECT_LOGS_DIR=./logs/

# =============================================================================
# PERFORMANCE AND SCALING
# =============================================================================

# Number of random anchor points for evaluation (1-1000)
DATECT_N_RANDOM_ANCHORS=200

# Minimum samples required to train a model (1-100)
DATECT_MIN_TRAINING_SAMPLES=3

# Minimum days between training and prediction (0-30)
DATECT_TEMPORAL_BUFFER_DAYS=1

# Number of parallel jobs (-1 for all available cores, or specific number)
DATECT_PARALLEL_JOBS=-1

# =============================================================================
# NETWORK AND SERVICES
# =============================================================================

# Port for web dashboard (1024-65535)
DATECT_DASHBOARD_PORT=8065

# Port for prediction API service (1024-65535)
DATECT_API_PORT=8000

# Host address for API service
DATECT_API_HOST=localhost

# =============================================================================
# LOGGING AND MONITORING
# =============================================================================

# Logging level: DEBUG, INFO, WARNING, ERROR, CRITICAL
DATECT_LOG_LEVEL=INFO

# Enable logging to files: true or false
DATECT_ENABLE_FILE_LOGGING=true

# Maximum log file size in MB (1-100)
DATECT_MAX_LOG_FILE_SIZE_MB=10

# =============================================================================
# EXTERNAL SERVICES (Optional)
# =============================================================================

# Database connection URL (optional for development)
# DATABASE_URL=postgresql://user:password@localhost:5432/datect

# Redis connection URL for caching (optional)
# REDIS_URL=redis://localhost:6379/0

# =============================================================================
# SECURITY AND AUTHENTICATION
# =============================================================================

# Secret key for API authentication (REQUIRED for production)
# DATECT_SECRET_KEY=your-very-secure-secret-key-here-change-this-in-production

# API key for external service authentication (optional)
# DATECT_API_KEY=your-api-key-here

# =============================================================================
# DEVELOPMENT AND DEBUG SETTINGS
# =============================================================================

# Enable debug mode: true or false (auto-detected based on environment)
# DATECT_DEBUG=false

# Enable performance profiling: true or false
DATECT_ENABLE_PROFILING=false

# Save intermediate processing results: true or false
DATECT_SAVE_INTERMEDIATE_RESULTS=true

# =============================================================================
# EXAMPLE CONFIGURATIONS BY ENVIRONMENT
# =============================================================================

# DEVELOPMENT ENVIRONMENT:
# DATECT_ENVIRONMENT=development
# DATECT_FORECAST_MODE=retrospective  
# DATECT_N_RANDOM_ANCHORS=50
# DATECT_LOG_LEVEL=DEBUG
# DATECT_DEBUG=true

# STAGING ENVIRONMENT:
# DATECT_ENVIRONMENT=staging
# DATECT_FORECAST_MODE=realtime
# DATECT_N_RANDOM_ANCHORS=100
# DATECT_LOG_LEVEL=INFO
# DATECT_SECRET_KEY=staging-secret-key

# PRODUCTION ENVIRONMENT:
# DATECT_ENVIRONMENT=production
# DATECT_FORECAST_MODE=realtime
# DATECT_N_RANDOM_ANCHORS=200
# DATECT_LOG_LEVEL=WARNING
# DATECT_SECRET_KEY=production-secret-key-very-secure
# DATECT_DEBUG=false
# DATECT_ENABLE_FILE_LOGGING=true
# DATABASE_URL=postgresql://user:password@prod-db:5432/datect
# REDIS_URL=redis://redis-server:6379/0

# =============================================================================
# DOCKER ENVIRONMENT VARIABLES
# =============================================================================
# When running in Docker, these variables can be set in docker-compose.yml:
#
# environment:
#   - DATECT_ENVIRONMENT=production
#   - DATECT_FORECAST_MODE=realtime
#   - DATECT_API_PORT=8000
#   - DATECT_SECRET_KEY=${SECRET_KEY}
#   - DATABASE_URL=${DATABASE_URL}

# =============================================================================
# KUBERNETES ENVIRONMENT VARIABLES
# =============================================================================
# When deploying to Kubernetes, use ConfigMap and Secret resources:
#
# ConfigMap for non-sensitive values:
# data:
#   DATECT_ENVIRONMENT: "production"
#   DATECT_FORECAST_MODE: "realtime"
#   DATECT_API_PORT: "8000"
#
# Secret for sensitive values:
# data:
#   DATECT_SECRET_KEY: <base64-encoded-secret>
#   DATABASE_URL: <base64-encoded-connection-string>