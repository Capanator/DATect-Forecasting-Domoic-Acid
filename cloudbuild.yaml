# Google Cloud Build configuration for DATect deployment
# Builds the Docker image with pre-computed cache

steps:
  # Step 1: Build the production Docker image with pre-computed cache
  - name: 'gcr.io/cloud-builders/docker'
    id: 'build-production-image'
    args:
      - 'build'
      - '-f'
      - 'Dockerfile.production'
      - '-t'
      - 'gcr.io/${PROJECT_ID}/datect:latest'
      - '.'
    timeout: '1800s'  # 30 minutes for cache pre-computation

  # Step 2: Push the image to Container Registry
  - name: 'gcr.io/cloud-builders/docker'
    id: 'push-image'
    args:
      - 'push'
      - 'gcr.io/${PROJECT_ID}/datect:latest'

  # Step 3: Deploy to Cloud Run
  - name: 'gcr.io/cloud-builders/gcloud'
    id: 'deploy-cloud-run'
    args:
      - 'run'
      - 'deploy'
      - 'datect-api'
      - '--image'
      - 'gcr.io/${PROJECT_ID}/datect:latest'
      - '--platform'
      - 'managed'
      - '--region'
      - '${_REGION}'
      - '--allow-unauthenticated'
      - '--memory'
      - '2Gi'
      - '--cpu'
      - '2'
      - '--concurrency'
      - '80'
      - '--max-instances'
      - '10'
      - '--timeout'
      - '300'
      - '--set-env-vars'
      - 'CACHE_DIR=/app/cache,NODE_ENV=production,PYTHONPATH=/app'

# Configure build resources for heavy pre-computation
options:
  machineType: 'E2_HIGHCPU_8'  # 8 vCPUs for faster cache generation
  logging: CLOUD_LOGGING_ONLY

# Default values - can be overridden
substitutions:
  _REGION: us-west1

# Build timeout
timeout: '2400s'  # 40 minutes total

# Tags for organization
tags:
  - 'datect'
  - 'production'
  - 'cached'